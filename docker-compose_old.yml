services:
  nextcloud_app:
    image: nextcloud
    container_name: nextcloud
    restart: unless-stopped
    networks: 
      - nextcloud
      - proxy
    depends_on:
      - nextcloud_db
      - nextcloud_redis
    ports:
      - 8081:80
    volumes:
      - ./html:/var/www/html
      - ./custom_apps:/var/www/html/custom_apps
      - ./config:/var/www/html/config
      - ./data:/var/www/html/data
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Berlin
      MYSQL_DATABASE: ${NEXTCLOUD_DATABASE_NAME}
      MYSQL_USER: ${NEXTCLOUD_DATABASE_USER}
      MYSQL_PASSWORD: ${NEXTCLOUD_DATABASE_PASSWORD}
      MYSQL_HOST: ${NEXTCLOUD_DATABASE_HOST}
      REDIS_HOST: ${NEXTCLOUD_REDIS_HOST}
    labels:
      traefik.docker.network: proxy
      traefik.enable: "true"
      traefik.http.middlewares.nextcloud-dav.replacepathregex.regex: ^/.well-known/ca(l|rd)dav
      traefik.http.middlewares.nextcloud-dav.replacepathregex.replacement: /remote.php/dav/
      traefik.http.routers.nextcloud.entrypoints: websecure
      traefik.http.routers.nextcloud.middlewares: nextcloud-dav,default@file
      traefik.http.routers.nextcloud.rule: (Host(`${NEXTCLOUD_DOMAIN:-nextcloud.localhost}`))
      traefik.http.routers.nextcloud.service: nextcloud
      traefik.http.routers.nextcloud.tls: "true"
      traefik.http.routers.nextcloud.tls.certresolver: http_resolver
      traefik.http.services.nextcloud.loadbalancer.server.port: "80"

  nextcloud_db:
    image: mariadb
    container_name: nextcloud_db
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    networks: 
      - nexcloud
    volumes:
      - ./nextcloud_db:/var/lib/mysql
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/Berlin
      MYSQL_DATABASE: ${NEXTCLOUD_DATABASE_NAME}
      MYSQL_USER: ${NEXTCLOUD_DATABASE_USER}
      MYSQL_PASSWORD: ${NEXTCLOUD_DATABASE_PASSWORD}
      MYSQL_HOST: ${NEXTCLOUD_DATABASE_HOST}
      REDIS_HOST: ${NEXTCLOUD_REDIS_HOST}
      
  #collabora:
  #  image: collabora/code
  #  container_name: collabora
  #  restart: unless-stopped
  #  networks: 
  #    - cloud
  #  environment:
  #    - PUID=1000
  #    - PGID=1000
  #    - TZ=America/Los_Angeles
  #    - password=password
  #    - username=nextcloud
  #    - domain=example.com
  #    - extra_params=--o:ssl.enable=true
  #  ports:
  #    - 9980:9980

  nextcloud_redis:
    image: redis:alpine
    container_name: redis
    volumes:
      - ./redis:/data  
    networks: 
      - nextcloud
  
  #nginx-proxy:
  #  image: 'jc21/nginx-proxy-manager:latest'
  #  container_name: nginx-proxy
  #  environment:
  #    - PUID=1000
  #    - PGID=1000
  #    - TZ=America/Los_Angeles
  #  restart: unless-stopped
  #  ports:
  #    - '80:80'
  #    - '81:81'
  #    - '443:443'
  #  volumes:
  #    - ./data:/data
  #    - ./letsencrypt:/etc/letsencrypt

networks:
  nextcloud:
    name: nextcloud
    driver: bridge
  proxy:
    external: true







#services:
  nextcloud-db:
    image: mariadb:10.6
    container_name: nextcloud-db
    command: --transaction-isolation=READ-COMMITTED --innodb_read_only_compressed=OFF
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ./database:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_MARIADB_ROOT_PASSWORD:-super_secret_password_change_me}
      - MYSQL_PASSWORD=${NEXTCLOUD_MARIADB_USER_PASSWORD:-super_secret_password_change_me}
      - MYSQL_DATABASE=${NEXTCLOUD_DATABASE_NAME:-nextcloud}
      - MYSQL_USER=${NEXTCLOUD_DATABASE_USER:-nextcloud}
      - MYSQL_INITDB_SKIP_TZINFO=1
      - MARIADB_AUTO_UPGRADE=1
    networks:
      - default
    # Sicherheitsoptionen f√ºr den Container.
    security_opt:
      - no-new-privileges=true

      
  nextcloud-redis:
    image: redis:alpine
    container_name: nextcloud-redis
    hostname: nextcloud-redis
    networks:
        - default
    restart: unless-stopped
    command: redis-server --requirepass ${NEXTCLOUD_REDIS_PASSWORD} 
    

  nextcloud-app:
    image: nextcloud
    container_name: nextcloud-app
    restart: unless-stopped
    depends_on:
      - nextcloud-db
      - nextcloud-redis
    environment:
        TRUSTED_PROXIES: 172.16.255.254
        OVERWRITEPROTOCOL: https
        OVERWRITECLIURL: https://${NEXTCLOUD_DOMAIN:-nextcloud.localhost}
        OVERWRITEHOST: ${NEXTCLOUD_DOMAIN:-nextcloud.localhost}
        REDIS_HOST: nextcloud-redis
        REDIS_HOST_PASSWORD: ${NEXTCLOUD_REDIS_PASSWORD}
    volumes:
      - ./app:/var/www/html
      - ./data:/var/www/html/data
    labels:
      traefik.docker.network: proxy
      traefik.enable: "true"
      traefik.http.middlewares.nextcloud-dav.replacepathregex.regex: ^/.well-known/ca(l|rd)dav
      traefik.http.middlewares.nextcloud-dav.replacepathregex.replacement: /remote.php/dav/
      traefik.http.routers.nextcloud.entrypoints: websecure
      traefik.http.routers.nextcloud.middlewares: nextcloud-dav,default@file
      traefik.http.routers.nextcloud.rule: (Host(`${NEXTCLOUD_DOMAIN:-nextcloud.localhost}`))
      traefik.http.routers.nextcloud.service: nextcloud
      traefik.http.routers.nextcloud.tls: "true"
      traefik.http.routers.nextcloud.tls.certresolver: http_resolver
      traefik.http.services.nextcloud.loadbalancer.server.port: "80"

    networks:
      - proxy
      - default
#
#networks:
#  proxy:
#    external: true