volumes:
  nextcloud-app-backups:
  nextcloud-app:
  nextcloud-database-backups:
  nextcloud-database:
  nextcloud-postgres-backup:
  nextcloud-redis:

networks:
  nextcloud-network:
    driver: bridge
  proxy:
    external: true


services:
  postgres:
    image: ${NEXTCLOUD_POSTGRES_IMAGE_TAG:-postgres:latest}
    volumes:
      - nextcloud-database:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${NEXTCLOUD_DATABASE_NAME}
      POSTGRES_USER: ${NEXTCLOUD_DATABASE_USER}
      POSTGRES_PASSWORD: ${NEXTCLOUD_DATABASE_PASSWORD}
    networks:
      - nextcloud-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${NEXTCLOUD_DATABASE_NAME}", "-U", "${NEXTCLOUD_DATABASE_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  redis:
    image: ${NEXTCLOUD_REDIS_IMAGE_TAG:-redis:alpine}
    command: ["redis-server", "--requirepass", "$NEXTCLOUD_REDIS_PASSWORD"]
    volumes:
      - nextcloud-redis:/data
    networks:
      - nextcloud-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  nextcloud:
    image: ${NEXTCLOUD_IMAGE_TAG:-nextcloud}
    volumes:
      - nextcloud-app:${DATA_PATH}
    environment:
      TZ: ${NEXTCLOUD_TIMEZONE}
      POSTGRES_HOST: postgres
      DB_PORT: 5432
      POSTGRES_DB: ${NEXTCLOUD_DATABASE_NAME}
      POSTGRES_USER: ${NEXTCLOUD_DATABASE_USER}
      POSTGRES_PASSWORD: ${NEXTCLOUD_DATABASE_PASSWORD}
      REDIS_HOST: redis
      REDIS_HOST_PORT: 6379
      REDIS_HOST_PASSWORD: ${NEXTCLOUD_REDIS_PASSWORD}
      NEXTCLOUD_ADMIN_USER: ${NEXTCLOUD_ADMIN_USERNAME}
      NEXTCLOUD_ADMIN_PASSWORD: ${NEXTCLOUD_ADMIN_PASSWORD}
      NEXTCLOUD_TRUSTED_DOMAINS: ${NEXTCLOUD_HOSTNAME}
      TRUSTED_PROXIES: ${NEXTCLOUD_HOSTNAME}
      OVERWRITECLIURL: ${NEXTCLOUD_URL}
      OVERWRITEPROTOCOL: https
      OVERWRITEHOST: ${NEXTCLOUD_HOSTNAME}
    networks:
      - nextcloud-network
      - proxy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`${NEXTCLOUD_HOSTNAME}`)"
      - "traefik.http.routers.nextcloud.service=nextcloud"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.routers.nextcloud.tls.certresolver=http_resolver"
      - "traefik.http.services.nextcloud.loadbalancer.passhostheader=true"
      - "traefik.http.routers.nextcloud.middlewares=compresstraefik"
      - "traefik.http.middlewares.compresstraefik.compress=true"
      - "traefik.docker.network=proxy"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  backups:
    image: ${NEXTCLOUD_POSTGRES_IMAGE_TAG}
    command: >-
      sh -c 'sleep $BACKUP_INIT_SLEEP &&
      while true; do
        pg_dump -h postgres -p 5432 -d $NEXTCLOUD_DATABASE_NAME -U $NEXTCLOUD_DATABASE_USER | gzip > $POSTGRES_BACKUPS_PATH/$POSTGRES_BACKUP_NAME-$(date "+%Y-%m-%d_%H-%M").gz &&
        tar -zcpf $DATA_BACKUPS_PATH/$DATA_BACKUP_NAME-$(date "+%Y-%m-%d_%H-%M").tar.gz $DATA_PATH &&
        find $POSTGRES_BACKUPS_PATH -type f -mtime +$POSTGRES_BACKUP_PRUNE_DAYS | xargs rm -f &&
        find $DATA_BACKUPS_PATH -type f -mtime +$DATA_BACKUP_PRUNE_DAYS | xargs rm -f;
        sleep $BACKUP_INTERVAL; done'
    volumes:
      - nextcloud-postgres-backup:/var/lib/postgresql/data
      - nextcloud-app:${DATA_PATH}
      - nextcloud-app-backups:${DATA_BACKUPS_PATH}
      - nextcloud-database-backups:${POSTGRES_BACKUPS_PATH}
    environment:
      NEXTCLOUD_DATABASE_NAME: ${NEXTCLOUD_DATABASE_NAME}
      NEXTCLOUD_DATABASE_USER: ${NEXTCLOUD_DATABASE_USER}
      PGPASSWORD: ${NEXTCLOUD_DATABASE_PASSWORD}
      BACKUP_INIT_SLEEP: ${BACKUP_INIT_SLEEP}
      BACKUP_INTERVAL: ${BACKUP_INTERVAL}
      POSTGRES_BACKUP_PRUNE_DAYS: ${POSTGRES_BACKUP_PRUNE_DAYS}
      DATA_BACKUP_PRUNE_DAYS: ${DATA_BACKUP_PRUNE_DAYS}
      POSTGRES_BACKUPS_PATH: ${POSTGRES_BACKUPS_PATH}
      DATA_BACKUPS_PATH: ${DATA_BACKUPS_PATH}
      DATA_PATH: ${DATA_PATH}
      POSTGRES_BACKUP_NAME: ${POSTGRES_BACKUP_NAME}
      DATA_BACKUP_NAME: ${DATA_BACKUP_NAME}
    networks:
      - nextcloud-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy